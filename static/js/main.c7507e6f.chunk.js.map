{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["api","App","useState","query","setQuery","weather","setWeather","img","setImage","icon","setIcon","className","style","backgroundImage","backgroundSize","backgroundPosition","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","main","console","log","preventDefault","res2","result2","results","Math","floor","random","urls","regular","name","sys","country","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","src","round","temp","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAGMA,G,MACC,oCADDA,EAEE,2CAFFA,EAGM,8CAHNA,EAKK,gDAsGIC,MAlGf,WAAgB,IAAD,EAEaC,mBAAS,IAFtB,mBAENC,EAFM,KAECC,EAFD,OAGiBF,mBAAS,IAH1B,mBAGNG,EAHM,KAGGC,EAHH,OAIWJ,mBAAS,IAJpB,mBAINK,EAJM,KAIDC,EAJC,OAKWN,mBAAS,IALpB,mBAKNO,EALM,KAKAC,EALA,KAwDb,OACE,qBAAKC,UAAU,UAAUC,MAAO,CAACC,gBAAgB,OAAD,OAASN,EAAT,KAChDO,eAAgB,QAChBC,mBAAoB,UAFpB,SAIE,iCACE,qBAAKJ,UAAU,aAAf,SACE,uBACAK,KAAK,OACLL,UAAU,aACVM,YAAY,YACZC,SAAU,SAAAC,GAAC,OAAIf,EAASe,EAAEC,OAAOC,QACjCA,MAAOlB,EACPmB,WA9DO,SAAAC,GACG,UAAZA,EAAIC,MACNC,MAAM,GAAD,OAAIzB,EAAJ,qBAAyBG,EAAzB,+BAAqDH,IACzD0B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACdF,MAAK,SAAAG,GACJvB,EAAWuB,GACmB,UAA1BA,EAAOxB,QAAQ,GAAGyB,KACpBpB,EAAQ,uDAC2B,OAA1BmB,EAAOxB,QAAQ,GAAGyB,KAC3BpB,EAAQ,gEAE2B,SAA1BmB,EAAOxB,QAAQ,GAAGyB,KACzBpB,EAAQ,uDAE2B,SAA1BmB,EAAOxB,QAAQ,GAAGyB,KACzBpB,EAAQ,oEAE2B,QAA1BmB,EAAOxB,QAAQ,GAAGyB,KACzBpB,EAAQ,0DAE2B,QAA1BmB,EAAOxB,QAAQ,GAAGyB,MACzBpB,EAAQ,mEAGlBqB,QAAQC,IAAIH,GACZN,EAAIU,oBAGNR,MAAM,GAAD,OAAIzB,GAAJ,OAAkBG,EAAlB,sBAAqCH,IACzC0B,MAAK,SAAAQ,GAAI,OAAIA,EAAKN,UAClBF,MAAK,SAAAS,GACJJ,QAAQC,IAAIG,GACZ3B,EAAS2B,EAAQC,QAAQC,KAAKC,MAAsB,EAAhBD,KAAKE,SAAa,IAAKC,KAAKC,kBAqCzC,oBAAhBpC,EAAQyB,KACjB,gCACE,sBAAKnB,UAAU,eAAf,UACA,sBAAKA,UAAU,WAAf,UAA2BN,EAAQqC,KAAnC,KAA2CrC,EAAQsC,IAAIC,WACrD,qBAAKjC,UAAU,OAAf,SApCU,SAACkC,GACnB,IAGIC,EAFO,CAAC,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAE/DD,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EALS,CAAC,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAKzGL,EAAEM,YACjBC,EAAOP,EAAEQ,cAEb,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,GA4BzBE,CAAY,IAAIC,WAGrB,qBAAK5C,UAAU,cAAf,SACE,sBAAKA,UAAU,OAAf,UACA,qBAAKA,UAAU,UAAf,SAAsD,aAA3BN,EAAQA,QAAQ,GAAGyB,KAAuB,iCAAM,qBAAK0B,IAAK/C,IAAO,uBAAOJ,EAAQA,QAAQ,GAAGyB,QAAgBzB,EAAQA,QAAQ,GAAGyB,OACtJO,KAAKoB,MAAMpD,EAAQyB,KAAK4B,MAF3B,gBAOG,SC5FEC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c7507e6f.chunk.js","sourcesContent":["import './App.css';\nimport React, {useState} from 'react';\n\nconst api = {\n  key: \"332a53fbe81740907e4694971ff1680f\",\n  base: \"https://api.openweathermap.org/data/2.5/\",\n  imagekey: \"j81nbzUzeUYH5JQ_fJ6Ir8b2BW-FHTfLCFL67-42iCE\",\n  secretkey: \"wTUBXSiJ-uFopJxmCnQqwvB1LH3fYPF_MG1ACdGDs10\",\n  baseimg: \"https://api.unsplash.com/search/photos?query=\"\n}\n\n\nfunction App() {\n\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n  const [img, setImage] = useState('');\n  const [icon, setIcon] = useState('');\n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n      .then(res => res.json())\n        .then(result => {\n          setWeather(result);\n          if (result.weather[0].main == \"Clouds\") {\n            setIcon('https://img.icons8.com/clouds/100/000000/clouds.png');\n          } else if (result.weather[0].main == \"Fog\") {\n            setIcon('https://img.icons8.com/ultraviolet/80/000000/fog-day--v2.png');\n            }\n            else if (result.weather[0].main == \"Clear\") {\n              setIcon('https://img.icons8.com/office/80/000000/sun--v2.png');\n              }\n              else if (result.weather[0].main == \"Smoke\") {\n                setIcon('https://img.icons8.com/ultraviolet/80/000000/smoke-explosion.png');\n                }\n                else if (result.weather[0].main == \"Snow\") {\n                  setIcon('https://img.icons8.com/cute-clipart/80/000000/snow.png');\n                  }\n                  else if (result.weather[0].main == \"Mist\") {\n                    setIcon('https://img.icons8.com/carbon-copy/100/000000/foggy-night-1.png');\n                    }\n          \n          console.log(result);\n          evt.preventDefault();\n         \n        });\n        fetch(`${api.baseimg}${query}&client_id=${api.imagekey}`)\n        .then(res2 => res2.json())\n        .then(result2 => {\n          console.log(result2);\n          setImage(result2.results[Math.floor(Math.random() * 9+1 )].urls.regular);\n        })\n    }\n  }\n\n  const dateBuilder = (d) => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    let day = days[d.getDay()];\n    let date = d.getDate();\n    let month = months[d.getMonth()];\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`\n  }\n\n  return (\n    <div className=\"bgimage\" style={{backgroundImage: `url(${img})`,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"bottom\"\n    }}>\n      <main>\n        <div className=\"search-box\">\n          <input \n          type=\"text\"\n          className=\"search-bar\"\n          placeholder=\"Search...\"\n          onChange={e => setQuery(e.target.value)}\n          value={query}\n          onKeyPress={search}\n          />\n          {/* <form onSubmit={search}>\n           <input type=\"submit\" value=\"submit\" className=\"btn btn-primary\" />Submit\n           </form> */}\n        </div>\n       \n        {(typeof weather.main != \"undefined\") ? (\n        <div>\n          <div className=\"location-box\">\n          <div className=\"location\">{weather.name}, {weather.sys.country}</div>\n            <div className=\"date\">\n            {dateBuilder(new Date())}\n            </div>\n        </div>\n        <div className=\"weather-box\">\n          <div className=\"temp\">\n          <div className=\"weather\">{(weather.weather[0].main != \"undefined\") ? <span><img src={icon}/><br />{weather.weather[0].main}</span> : (weather.weather[0].main) }</div>\n            {Math.round(weather.main.temp)}Â°C\n          </div>\n          \n        </div>\n        </div>\n        ) : ('')}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}